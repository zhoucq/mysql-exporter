name: CI/CD

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          check-latest: true

      - name: Install golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest

      - name: Run golangci-lint
        run: golangci-lint run ./...

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          check-latest: true

      - name: Run tests
        run: |
          # Check if there are any test files
          if find . -name "*_test.go" | grep -q .; then
            go test -v ./...
          else
            echo "No test files found. Skipping tests."
          fi

  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          check-latest: true

      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          # Set binary name based on OS
          if [ "${{ matrix.goos }}" = "windows" ]; then
            BINARY_NAME=mysql-exporter.exe
          else
            BINARY_NAME=mysql-exporter
          fi

          # Build the binary
          go build -v -o $BINARY_NAME

          # Create zip archive
          if [ "${{ matrix.goos }}" = "windows" ]; then
            zip mysql-exporter-${{ matrix.goos }}-${{ matrix.goarch }}.zip $BINARY_NAME
          else
            tar -czvf mysql-exporter-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz $BINARY_NAME
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: mysql-exporter-${{ matrix.goos }}-${{ matrix.goarch }}
          path: |
            mysql-exporter*
          retention-days: 5

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            mysql-exporter-*/mysql-exporter-*.zip
            mysql-exporter-*/mysql-exporter-*.tar.gz
          draft: false
          prerelease: false
          generate_release_notes: true
